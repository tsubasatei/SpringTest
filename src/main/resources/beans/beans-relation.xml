<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        抽象 bean：bean 的 abstract 属性为 true 的 bean
        这样的 bean 不能被 IOC 容器实例化，只能用来被继承配置
        若某一个 bean 的 class 属性没有指定，则该 bean 必须是一个抽象 bean
    -->
    <bean id="address"
          p:city="BeiJing" p:street="WuDaoKou" abstract="true"/>

    <!-- bean 配置的继承： 使用 bean 的 parent 属性指定继承哪个 bean 的配置
         并不是 <bean> 元素里的所有属性都会被继承. 比如: autowire, abstract 等
    -->
    <bean id="address2" class="com.xt.spring.bean.autowire.Address"
          parent="address" />

    <bean id="address3" class="com.xt.spring.bean.autowire.Address"
          parent="address2" p:street="DaZhongSi"/>

    <bean id="car" class="com.xt.spring.bean.autowire.Car" p:brand="Audi" p:price="250000"/>

    <!-- 要求在配置 Person 时，必须有一个关联的 car
         换句话说 person 这个 bean 依赖于 car 这个 bean
         Spring 允许用户通过 depends-on 属性设定 Bean 前置依赖的Bean，前置依赖的 Bean 会在本 Bean 实例化之前创建好
         如果前置依赖于多个 Bean，则可以通过逗号，空格或的方式配置 Bean 的名称

    -->
    <bean id="person" class="com.xt.spring.bean.autowire.Person"
          p:name="Tom" p:address-ref="address2" depends-on="car" autowire="byName"/>
</beans>